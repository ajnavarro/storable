
type {{.ResultSetName}} struct {
    storable.ResultSet
    last    *{{.Name}}
    lastErr error
}

// All returns all documents on the resultset and close the resultset
func (r *{{.ResultSetName}}) All() ([]*{{.Name}}, error) {
    var result []*{{.Name}}
    err := r.ResultSet.All(&result)

    return result, err
}

// One returns the first document on the resultset and close the resultset
func (r *{{.ResultSetName}}) One() (*{{.Name}}, error) {
    var result *{{.Name}}
    err := r.ResultSet.One(&result)

    return result, err
}

// Next prepares the next result document for reading with the Get method.
func (r *{{.ResultSetName}}) Next() (returned bool) {
    r.last = nil
    returned, r.lastErr = r.ResultSet.Next(&r.last)
    return
}

// Get returns the document retrieved with the Next method.
func (r *{{.ResultSetName}}) Get() (*{{.Name}}, error) {
    return r.last, r.lastErr
}

// ForEach iterates the resultset calling to the given function.
func (r *{{.ResultSetName}}) ForEach(f func(*{{.Name}}) error) error {
    for {
        var result *{{.Name}}
        found, err := r.ResultSet.Next(&result)
        if err != nil {
            return err
        }

        if !found {
            break
        }

        err = f(result)
        if err == storable.ErrStop {
            break
        }

        if  err != nil {
            return err
        }
    }

    return nil
}
