
type {{.Name}}Store struct {
	storable.Store
}

func New{{.Name}}Store(db *mgo.Database) *{{.Name}}Store {
	return &{{.Name}}Store{*storable.NewStore(db, "{{ .Collection }}")}
}

func (s *{{.Name}}Store) New() *{{.Name}} {
	return &{{.Name}}{}
}

func (s *{{.Name}}Store) Query() *{{.Name}}Query {
    return &{{.Name}}Query{*storable.NewBaseQuery()}
}

func (s *{{.Name}}Store) Find(query *{{.Name}}Query) (*{{.Name}}ResultSet, error) {
    resultSet, err := s.Store.Find(query)
    if err != nil {
        return nil, err
    }

    return &{{.Name}}ResultSet{*resultSet}, nil
}

func (s *{{.Name}}Store) FindOne(query *{{.Name}}Query) (*{{.Name}}, error) {
    resultSet, err := s.Find(query)
    if err != nil {
        return nil, err
    }

    return resultSet.One()
}


{{template "query" .}}

{{template "resultset" .}}
